

#ifndef SFML_JOYSTICKOSX_HPP
#define SFML_JOYSTICKOSX_HPP

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////

#if USE_OS_X_VERSION_10_6
	#include <IOKit/hid/IOHIDDevice.h>
#endif

namespace sf
{
namespace priv
{
////////////////////////////////////////////////////////////
/// \brief OSX implementation of Joystick
///
////////////////////////////////////////////////////////////
class Joystick
{
	public :
	
	////////////////////////////////////////////////////////////
	/// \brief Initialize the instance and bind it to a physical joystick
	///
	/// \param index Index of the physical joystick to bind to
	///
	////////////////////////////////////////////////////////////
	void Initialize(unsigned int index);
	
	////////////////////////////////////////////////////////////
	/// \brief Update the current joystick and return its new state
	///
	/// \return Current state of the joystick
	///
	////////////////////////////////////////////////////////////
	JoystickState UpdateState();
	
	////////////////////////////////////////////////////////////
	/// \brief Check if the joystick supports the given axis
	///
	/// \param axis Axis to check
	///
	/// \return True of the axis is supported, false otherwise
	///
	////////////////////////////////////////////////////////////
	bool HasAxis(Joy::Axis Axis) const;
	
	////////////////////////////////////////////////////////////
	/// \brief Get the number of buttons supported by the joystick
	///
	/// \return Number of buttons
	///
	////////////////////////////////////////////////////////////
	unsigned int GetButtonsCount() const;
	
	private :
	
	////////////////////////////////////////////////////////////
	// Member data
	////////////////////////////////////////////////////////////
};
	
} // namespace priv
	
} // namespace sf


#endif // SFML_JOYSTICKOSX_HPP
